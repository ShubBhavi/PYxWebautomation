{"name": "test_positive1", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not iterable", "trace": "self = <Test_pom.Test_Login object at 0x0000022CBDDAB3B0>\nsetup = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"26e808807cf739e6b095b985d9e0d4d6\")>\n\n    @pytest.mark.usefixtures(\"setup\")\n    def test_positive1(self,setup):\n        driver = setup\n        driver.get(self.url)\n        login_page = Login_page(driver)\n        login_page.get_makeappointment()\n>       login_page.login_to_cura(user=self.name, pwd=self.password)\n\nTest_pom.py:14: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\pageobjects\\loginpage.py:48: in login_to_cura\n    self.get_password().send_keys(pwd)\n..\\..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:232: in send_keys\n    Command.SEND_KEYS_TO_ELEMENT, {\"text\": \"\".join(keys_to_typing(value)), \"value\": keys_to_typing(value)}\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nvalue = (None,)\n\n    def keys_to_typing(value: Iterable[AnyKey]) -> List[str]:\n        \"\"\"Processes the values that will be typed in the element.\"\"\"\n        characters: List[str] = []\n        for val in value:\n            if isinstance(val, Keys):\n                # Todo: Does this even work?\n                characters.append(val)\n            elif isinstance(val, (int, float)):\n                characters.extend(str(val))\n            else:\n>               characters.extend(val)\nE               TypeError: 'NoneType' object is not iterable\n\n..\\..\\..\\.venv\\Lib\\site-packages\\selenium\\webdriver\\common\\utils.py:137: TypeError"}, "start": 1722514317904, "stop": 1722514323053, "uuid": "54dd2bd8-f9a8-494c-b385-c948fff6b109", "historyId": "432a6188fbb927258fd8de0a54250628", "testCaseId": "432a6188fbb927258fd8de0a54250628", "fullName": "test.CURA_logintests.Pom.Test_pom.Test_Login#test_positive1", "labels": [{"name": "tag", "value": "@pytest.mark.usefixtures('setup')"}, {"name": "parentSuite", "value": "test.CURA_logintests.Pom"}, {"name": "suite", "value": "Test_pom"}, {"name": "subSuite", "value": "Test_Login"}, {"name": "host", "value": "INBLRGVE12617TL"}, {"name": "thread", "value": "20560-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test.CURA_logintests.Pom.Test_pom"}]}